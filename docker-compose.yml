services:
  users-api:
    container_name: users-api
    build: ./users
    ports:
      - "8080:8080"
    env_file:
      - ./.env
    depends_on:
      - mysql-users-api
    networks:
      - microservices

  activities-api:
    container_name: activities-api
    build: ./activities
    ports:
      - "8081:8080"
    env_file:
      - ./.env
    environment:
      - MONGO_URI=mongodb://mongo_activities_api:27017
      - MONGO_DB=${MONGO_DB:-activities}
    depends_on:
      - mongo_activities_api
    networks:
      - microservices

  mysql-users-api:
    image: mysql:9.3
    container_name: mysql-users-api
    env_file:
      - ./.env
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_PASS:-root}
      - MYSQL_DATABASE=${DB_SCHEMA:-users}
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - microservices

  mongo_activities_api:
    image: mongo:8.0
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=${MONGO_DB:-activities}
    volumes:
      - ./mongo-init:/docker-entrypoint-initdb.d:ro
      - mongo_data:/data/db
    networks:
      - microservices
  # frontend:
  #   build: ./frontend
  #   ports:
  #     - "5173:5173"
  #   depends_on:
  #     - users-api
  #   networks:
  #     - api-gateway

  # # para comunicar front y back
  # api-gateway:
  #   build: ./api-gateway
  #   ports: "8080:8080"
networks:
  api-gateway:
    driver: bridge
  microservices:
    driver: bridge

volumes:
  mysql_data:
  mongo_data:
