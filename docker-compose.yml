services:
  users-api:
    container_name: users-api
    build: ./users
    ports:
      - "8080:8080"
    env_file:
      - ./.env
    depends_on:
      - mysql-users-api
    networks:
      - microservices

  mysql-users-api:
    image: mysql:9.3
    container_name: mysql-users-api
    env_file:
      - ./.env
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_PASS:-root}
      - MYSQL_DATABASE=${DB_SCHEMA:-users}
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - microservices
  
  activities-api:
    container_name: activities-api
    build: ./activities
    ports:
      - "8081:8080"
    env_file:
      - ./.env
    depends_on:
      - mongo-activities-api
    networks:
      - microservices

  mongo-activities-api:
    image: mongo:8.0
    container_name: mongo-activities-api
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=${MONGO_DB:-activities}
    volumes:
      - ./mongo-init:/docker-entrypoint-initdb.d:ro
      - mongo_data:/data/db
    networks:
      - microservices

  frontend:
    container_name: frontend
    build: 
      context: ./frontend
      args:
        - VITE_USERS_URL=${VITE_USERS_URL}
        - VITE_ACTIVITIES_URL=${VITE_ACTIVITIES_URL}
        - VITE_SEARCH_URL=${VITE_SEARCH_URL}
    ports:
      - "80:80"
    environment:
      - VITE_USERS_URL=${VITE_USERS_URL}
      - VITE_ACTIVITIES_URL=${VITE_ACTIVITIES_URL}
      - VITE_SEARCH_URL=${VITE_SEARCH_URL}
    depends_on:
      - users-api
      - activities-api
    networks:
      - microservices

networks:
  microservices:
    driver: bridge

volumes:
  mysql_data:
  mongo_data:
